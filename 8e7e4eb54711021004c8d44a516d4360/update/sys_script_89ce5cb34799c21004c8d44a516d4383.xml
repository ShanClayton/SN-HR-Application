<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>true</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1298059_hr_human_resource</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1298059_hr_human_resource">state=6^EQ<item display_value="Resolved" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="6"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>State is Resolved</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    // Ensure the rule only runs when the state changes to Resolved and the current user has the hr_admin role
    if (current.state.changesTo(6) && gs.hasRole('hr_admin')) {
        var taskGr = new GlideRecord('x_1298059_hr_hr_task');
        taskGr.addQuery('parent', current.sys_id);
        taskGr.addQuery('state', '!=', 3); // Not Closed
        taskGr.query();
        
        if (taskGr.hasNext()) {
            // There are active tasks
            current.setAbortAction(true);
            gs.addErrorMessage('Please close all active tasks before Resolving this ticket');
        } else {
    current.resolved_by = gs.getUserID();
    var now = new GlideDateTime(); // This creates a GlideDateTime object with the current date and time
    current.resolved = now.getDisplayValue(); // Sets the 'resolved' field to the display value of the current date/time
}

    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-04-08 01:40:17</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>89ce5cb34799c21004c8d44a516d4383</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>State is Resolved</sys_name>
        <sys_overrides/>
        <sys_package display_value="Human Resource" source="x_1298059_hr">8e7e4eb54711021004c8d44a516d4360</sys_package>
        <sys_policy/>
        <sys_scope display_value="Human Resource">8e7e4eb54711021004c8d44a516d4360</sys_scope>
        <sys_update_name>sys_script_89ce5cb34799c21004c8d44a516d4383</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-10 04:52:36</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=89ce5cb34799c21004c8d44a516d4383"/>
</record_update>
